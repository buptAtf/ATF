@mixin flexbox() {
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}
@mixin flex-value($val){
    -webkit-box-flex: $val;
    -ms-flex: $val;
    flex: $val;
}
@mixin flex-wrap($fw){
    @if $fw == nowrap{
        -webkit-box-lines: single;
        -moz-box-lines: single;
        -webkit-flex-wrap: nowrap;
        -ms-flex-wrap: none;
        -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    }@else if $fw == wrap{
        -webkit-box-lines: multiple;
        -moz-box-lines: multiple;
        -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    }@else if $fw == 'rowwrap'{
        -webkit-flex-wrap: row wrap;
        -ms-flex-wrap: row wrap;
        flex-wrap: row wrap;
        flex-flow: row wrap;
    }@else {
        -webkit-flex-wrap: $fw;
        -ms-flex-wrap: $fw;
        flex-wrap: $fw;
    }
}
@mixin box-line($bl) {
    -webkit-box-lines: $bl;
    -moz-box-lines: $bl;
}
@mixin flex-shrink($fs) {
    -webkit-flex-shrink: $fs;
    -ms-flex: 0 $fs auto;
    flex-shrink: $fs;
}
@mixin justify-content($jc){
    @if $jc == 'flex-start'{
        -webkit-box-pack: start;
        -ms-flex-pack: start;
        -webkit-justify-content: flex-start;
        justify-content: flex-start;
    }@else if $jc == 'flex-end'{
        -webkit-box-pack: end;
        -ms-flex-pack: end;
        -webkit-justify-content: flex-end;
        justify-content: flex-end;
    }@else if $jc == 'space-between'{
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
        -webkit-justify-content: space-between;
        justify-content: space-between;
    }@else{
        -webkit-box-pack: $jc;
        -ms-flex-pack: $jc;
        -webkit-justify-content: $jc;
        justify-content: $jc;
    }
}

@mixin transformX($tx){
    -webkit-transform: translateX($tx);
      -ms-transform: translateX($tx);
          transform: translateX($tx);
}
@mixin transformY($ty){
    -webkit-transform: translateY($ty);
      -ms-transform: translateY($ty);
          transform: translateY($ty);
}
@mixin transformXY($tx,$ty){
    -webkit-transform: translate($tx,$ty);
      -ms-transform: translate($tx,$ty);
          transform: translate($tx,$ty);
}
@mixin transform-scale($tx,$ty,$ts){
    -webkit-transform: translate($tx, $ty) scale($ts);
    -ms-transform: translate($tx, $ty) scale($ts);
    transform: translate($tx, $ty) scale($ts);
}
@mixin transition($time){
    -webkit-transition: $time;
        -ms-transition: $time;
        transition: $time;
}
